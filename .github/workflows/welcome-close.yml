name: Close Newfork Welcome & Follow Up

on:
  issue_comment:
    types: [created]

jobs:
  close-and-followup:
    runs-on: ubuntu-latest

    # Only act on issues labeled "newfork"
    if: contains(github.event.issue.labels.*.name, 'newfork')

    steps:
      - name: Respond fast if question mark.
        if: "contains(steps.vars.outputs.comment, '?')"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_CROSSREPO }}
        run: |
          gh issue comment "${{ github.event.issue.number }}" \
            --comment "Oh... let's figure this out together. Grab me!" \
            --repo "${{ github.repository }}"
      - name: Respond fast if no question mark.
        if: "!contains(steps.vars.outputs.comment, '?')"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_CROSSREPO }}
        run: |
          gh issue comment "${{ github.event.issue.number }}" \
            --comment "Cool! Wait a sec." \
            --repo "${{ github.repository }}"
      - name: Extract FORK_FULL_NAME from comment
        id: vars
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          COMMENT_BODY="$(cat <<EOF
          $ISSUE_BODY
          EOF
          )"
          echo "Comment was:"
          echo "$COMMENT_BODY"
          FORK_REPO="$(echo "$COMMENT_BODY" | grep -oP 'Fork full name: `\K[^`]+')"

          echo "Extracted FORK_REPO: $FORK_REPO"

          echo "fork_repo<<EOF" >> "$GITHUB_OUTPUT"
          echo "$FORK_REPO" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          
      - name: Create follow-up issue in the fork
        id: followup
        if: "!contains(steps.vars.outputs.comment, '?')"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_CROSSREPO }}
          FORK_REPO: ${{ steps.vars.outputs.fork_repo }}
        run: |
          BODY=$(cat <<EOF
          Hi there,
          cool that you got the setup in posit cloud done.
      
          Now you need to gather some data, so run ... tbd.
          EOF
          )
      
          # Create issue and capture number
          # Create issue and capture output
          ISSUE_URL=$(gh issue create \
            --repo "$FORK_REPO" \
            --title "ðŸ“¦ Gather some data" \
            --body "$BODY")

          # Extract issue number from the URL
          ISSUE_NUMBER=$(basename "$ISSUE_URL")
      
          echo "Created issue #$ISSUE_NUMBER: $ISSUE_URL"
          
          gh issue comment "$ISSUE_NUMBER" \
            --repo "$FORK_REPO" \
            --body "When you are done, commit the data with \`closes #$ISSUE_NUMBER\`"
          
          echo "new_issue_number=$ISSUE_NUMBER" >> "$GITHUB_OUTPUT"
          echo "new_issue_url=$ISSUE_URL" >> "$GITHUB_OUTPUT"


      - name: Close issue if comment has no question mark
        if: "!contains(steps.vars.outputs.comment, '?')"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_CROSSREPO }}
        run: |
          echo "Closing issue #${{ github.event.issue.number }}"
          gh issue close "${{ github.event.issue.number }}" \
            --comment "Continue here: ${{ steps.followup.outputs.new_issue_url }}" \
            --repo "${{ github.repository }}"

